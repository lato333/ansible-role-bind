{#
 #  First create a dict holding the entire zone information and create a hash
 #  from it, that it can be compared with subsequent task executions. In this
 #  way the serial will only be updated if there are some content changes.
 #}
{% set _zone_data = {} %}
{% set _ = _zone_data.update({'ttl': bind_zone_ttl}) %}
{% set _ = _zone_data.update({'domain': item.name}) %}
{% set _ = _zone_data.update({'mname': item.name_servers|default([])}) %}
{% set _ = _zone_data.update({'aname': item.other_name_servers|default([])}) %}
{% set _ = _zone_data.update({'mail': item.mail_servers|default([])}) %}
{% if item.hostmaster_email is defined %}
{% set _ = _zone_data.update({'rname': (( item.hostmaster_email )) + ('' if (item.hostmaster_email is search('\.')) else ('.' + _zone_data['domain']))}) %}
{% else %}
{% if bind_hostmaster_email is defined %}
{% set _ = _zone_data.update({'rname': (( bind_hostmaster_email )) + ('' if (bind_hostmaster_email is search('\.')) else ('.' + _zone_data['domain']))}) %}
{% else %}
{% set _ = _zone_data.update({'rname': 'hostmaster.' + _zone_data['domain']}) %}
{% endif %}
{% endif %}
{% set _ = _zone_data.update({'refresh': bind_zone_time_to_refresh}) %}
{% set _ = _zone_data.update({'retry': bind_zone_time_to_retry}) %}
{% set _ = _zone_data.update({'expire': bind_zone_time_to_expire}) %}
{% set _ = _zone_data.update({'minimum': bind_zone_minimum_ttl}) %}
{% set _ = _zone_data.update({'hosts': item.hosts|default([])}) %}
{% set _ = _zone_data.update({'delegate': item.delegate|default([])}) %}
{% set _ = _zone_data.update({'services': item.services|default([])}) %}
{% set _ = _zone_data.update({'text': item.text|default([])}) %}
{% set _ = _zone_data.update({'naptr': item.naptr|default([])}) %}
{% set _ = _zone_data.update({'caas': item.caas|default([])}) %}
{% set _ = _zone_data.update({'ptr': item.ptr|default([])}) %}
{#
 #  Compare the zone file hash with the current zone data hash and set serial
 #  accordingly
 #}
{% set _zone = {'hash': _zone_data | string | hash('md5')} %}
{% for _result in forward_hashes if _result.name == item.name %}
{%   set _hash_serial = _result.hash.split(' ')[2:] %}
{%   if _hash_serial and _hash_serial[0] == _zone['hash'] %}
{%     set _ = _zone.update({'serial': _hash_serial[1]}) %}
{%   else %}
{%     set _ = _zone.update({'serial': timestamp.stdout}) %}
{%   endif %}
{% endfor %}
{#
 #  Eventually output the zone data
 #}
; Hash: {{ _zone['hash'] }} {{ _zone['serial'] }}
; Zone file for {{ _zone_data['domain'] }}
{{ ansible_managed | comment(decoration='; ') }}

$ORIGIN {{ _zone_data['domain'] }}.
$TTL {{ _zone_data['ttl'] }}

{% if _zone_data['mname']|length > 0 %}
@ IN SOA {{ _zone_data['mname'][0].server }}{% if not _zone_data['mname'][0].server|regex_search('\.$') %}.{{ _zone_data['domain'] }}.{% endif %} {{ _zone_data['rname'] }}. (
{% else %}
@ IN SOA {{ bind_default_ns[0].server }}{% if not bind_default_ns[0].server|regex_search('\.$') %}.{{ _zone_data['domain'] }}.{% endif %} {{ _zone_data['rname'] }}. (
{% endif %}
  {{ _zone['serial'] }}
  {{ _zone_data['refresh'] }}
  {{ _zone_data['retry'] }}
  {{ _zone_data['expire'] }}
  {{ _zone_data['minimum'] }} )

{% if _zone_data['mname']|length > 0 %}
{% for ns in _zone_data['mname'] %}
{% if ns.name is not defined %}{{'@'.ljust(40)}}{% else %}{{ (ns.name|string).ljust(40) }}{% endif %}{{ (ns.ttl|string).rjust(6) if ns.ttl is defined else ''.ljust(6) }} IN  NS     {{ ns.server }}{% if not ns.server|regex_search('\.$') %}.{{ _zone_data['domain'] }}.{% endif %}

{% endfor %}
{% else %}
{% for ns in bind_default_ns %}
{% if ns.name is not defined %}{{'@'.ljust(40)}}{% else %}{{ (ns.name|string).ljust(40) }}{% endif %}{{ (ns.ttl|string).rjust(6) if ns.ttl is defined else ''.ljust(6) }} IN  NS     {{ ns.server }}{% if not ns.server|regex_search('\.$') %}.{{ _zone_data['domain'] }}.{% endif %}

{% endfor %}
{% endif %}
{% for ns in _zone_data['aname'] %}
{{'@'.ljust(40)}}{{ (ns.ttl|string).rjust(6) if ns.ttl is defined else ''.ljust(6) }} IN  NS     {{ ns }}.
{% endfor %}

{% for mail in _zone_data['mail'] %}
{% if mail.name is not defined %}{{'@'.ljust(40)}}{% else %}{{ mail.name.ljust(40) }}{% endif %}{{ (mail.ttl|string).rjust(6) if mail.ttl is defined else ''.ljust(6) }} IN  MX     {{ mail.preference}}  {{ mail.host }}{% if not mail.host.endswith('.') %}.{{ _zone_data['domain'] }}.{% endif %} 
{% endfor %}

{% if _zone_data['delegate']|length > 0 %}
{% for host in _zone_data['delegate'] %}
{{ host.zone.ljust(40) }}{{ (host.ttl|string).rjust(6) if host.ttl is defined else ''.ljust(6) }} IN  NS     {{ host.dns }}
{% endfor %}
{% endif %}

{% if _zone_data['hosts']|length > 0 %}
{% for host in _zone_data['hosts'] %}
{% if host.ip is defined %}
{% if host.ip is string %}
{% if "$GENERATE" not in host.name.upper() %}
{{ host.name.ljust(40) }}{{ (host.ttl|string).rjust(6) if host.ttl is defined else ''.ljust(6) }} IN  A      {{ host.ip }}
{% endif %}
{% if "$GENERATE" in host.name.upper() %}
{{ host.name.ljust(40) }}{{ (host.ttl|string).rjust(6) if host.ttl is defined else ''.ljust(6) }} IN  A      {{ host.ip }}
{% endif %}
{% else %}
{% for ip in host.ip %}
{{ host.name.ljust(40) }}{{ (host.ttl|string).rjust(6) if host.ttl is defined else ''.ljust(6) }} IN  A      {{ ip }}
{% endfor %}
{% endif %}
{% endif %}
{% if host.ipv6 is defined %}
{% if host.ipv6 is string %}
{{ host.name.ljust(40) }}{{ (host.ttl|string).rjust(6) if host.ttl is defined else ''.ljust(6) }} IN  AAAA   {{ host.ipv6 }}
{% else %}
{% for ip6 in host.ipv6 %}
{{ host.name.ljust(40) }}{{ (host.ttl|string).rjust(6) if host.ttl is defined else ''.ljust(6) }} IN  AAAA   {{ ip6 }}
{% endfor %}
{% endif %}
{% endif %}
{% if host.alias is defined %}
{% if "$GENERATE" not in host.name.upper() %}
{{ host.name.ljust(40) }}{{ (host.ttl|string).rjust(6) if host.ttl is defined else ''.ljust(6) }} IN  {{ host.type|default('cname')|upper}}  {{ host.alias }}
{% endif %}
{% if "$GENERATE" in host.name.upper() %}
{{ host.name.ljust(40) }} IN  CNAME  {{ host.alias }}
{% endif %}
{% endif %}
{% if host.sshfp is defined %}
{% for sshfp in host.sshfp %}
{{ host.name.ljust(40) }}}{{ (host.ttl|string).rjust(6) if host.ttl is defined else ''.ljust(6) }} IN SSHFP {{ sshfp}}
{% endfor %}
{% endif %}
{% endfor %}
{% endif %}
{% for service in _zone_data['services'] %}
{{ service.name.ljust(40) }}{{ (service.ttl|string).rjust(6) if service.ttl is defined else ''.ljust(6) }} IN  SRV    {{ service.priority|default('0') }} {{ service.weight|default('0') }} {{ service.port }} {{ service.target }}
{% endfor %}
{% for text in _zone_data['text'] %}
{% if text.text is string %}
{{ text.name.ljust(40) }}{{ (text.ttl|string).rjust(6) if text.ttl is defined else ''.ljust(6) }} IN  TXT    "{{ text.text }}"
{% else %}
{%   for entry in text.text %}
{{ text.name.ljust(40) }}{{ (text.ttl|string).rjust(6) if text.ttl is defined else ''.ljust(6) }} IN  TXT    "{{ entry }}"
{%   endfor %}
{% endif %}
{% endfor %}
{% for naptr in _zone_data['naptr'] %}
{{ naptr.name.ljust(40) }}{{ (naptr.ttl|string).rjust(6) if naptr.ttl is defined else ''.ljust(6) }} IN  NAPTR  {{ naptr.order|default('100') }} {{ naptr.pref|default('10') }} "{{ naptr.flags }}" "{{ naptr.service }}" "{{ naptr.regex }}" {{ naptr.replacement }}
{% endfor %}
{% for caa in _zone_data['caas'] %}
{{ caa.name.ljust(40) }}{{ (caa.ttl|string).rjust(6) if caa.ttl is defined else ''.ljust(6) }} IN  CAA  {{(caa.flag|string).rjust(4)}} {{caa.tag.ljust(10)}} "{{caa.value}}"
{% endfor %}
{% for ptr in _zone_data['ptr'] %}
{{ (ptr.ip|string).ljust(20) }}{{ (ptr.ttl|string).rjust(6) if ptr.ttl is defined else ''.ljust(6) }} IN  PTR {{ptr.name}} 
{% endfor %}
